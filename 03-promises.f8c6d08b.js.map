{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,SAS7B,SAASJ,EAAcC,EAAUI,GAC/B,IAAMC,EAAgBH,KAAKC,SAAW,GACtC,OACS,IAAIG,QADTD,EACiB,SAACE,EAASC,GAC3BC,YAAW,WACTF,EAAQ,CAAEP,WAAUC,MAAAG,MACnBA,IAGc,SAACG,EAASC,GAC3BC,YAAW,WACTD,EAAO,CAAER,WAAUC,MAAAG,MAClBA,KAKT,IAAMM,EAAQC,SAASC,cAAc,qBAC/BC,EAAOF,SAASC,cAAc,oBAC9BE,EAASH,SAASC,cAAc,qBAC1BD,SAASC,cAAc,uBAE/BG,iBAAiB,SAAS,SAAAC,GAC5BA,EAAMC,iBAEN,IADA,IAAIC,EAAOC,OAAOT,EAAMU,OACfC,EAAI,EAAGA,GAAKP,EAAOM,MAAOC,IACjCtB,EAAcsB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALtB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAANJ,EAAM,UAEvEK,OAAM,SAAAN,G,IAAGvB,EAAQuB,EAARvB,SAAU8B,EAAKP,EAALtB,MAClBwB,EAAA5B,GAAS6B,OAAOK,QAAQ,sBAAqCH,OAAf5B,EAAS,QAAY4B,OAANE,EAAM,UAEvEZ,GAAQC,OAAON,EAAKO,U","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    });\n  }\n}\n\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount');\nconst btn = document.querySelector('button[type=submit]');\n\nbtn.addEventListener('click', event => {\n  event.preventDefault();\n  let time = Number(delay.value);\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i, time)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    time += Number(step.value);\n  }\n});"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","delay1","shouldResolve","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","time","Number","value","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.f8c6d08b.js.map"}